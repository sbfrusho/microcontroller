A51 MACRO ASSEMBLER  STARTU32                                                             09/12/2024 14:18:44 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\STARTU32.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE STARTU32.A51 SET(SMALL) DEBUG PRINT(.\Listings\STARTU32.lst) OBJECT(.\O
                      bjects\STARTU32.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;
                       3     ;  *** <<< Use Configuration Wizard in Context Menu >>> ***
                       4     ;------------------------------------------------------------------------------
                       5     ;  Startu32.a51
                       6     ;
                       7     ;  Version:
                       8     ;  September 2004 Version 0.7 - Removed code that disables the DDC SRAM as it is
                       9     ;                                disabled by default upon reset.
                      10     ;  July 2004 Version 0.6 - Comments edited, added note about DDC SRAM related to
                      11     ;                           date code.
                      12     ;  June 2004 Version 0.5 - Comments edited, code to disable DDC SRAM corrected.
                      13     ;  March 2005 Version 0.6 - Added comments for Keil Configuration Wizard
                      14     ;  Dependencies: None
                      15     ;
                      16     ;
                      17     ;  Description:
                      18     ;  This code is executed after a reset.  Besides the usual C51 startup 
                      19     ;  settings, other uPSD Turbo initializations can be added here.  When
                      20     ;  the startup code execution is complete, this code jumps to C_START that is 
                      21     ;  typically the main() function in the C code.
                      22     ;
                      23     ;  Notes:
                      24     ;   - Watchdog timer is disabled - should be enabled at beginning of user's code
                      25     ;   - DDC and its RAM is disabled
                      26     ;   - Various IP prescalers are set to large values (lowers power consumption)
                      27     ;     The IP device drivers must initialize the prescalers appropriately.
                      28     ;
                      29     ;  Copyright (c) 2004 STMicroelectronics Inc.
                      30     ;
                      31     ;  This example demo code is provided as is and has no warranty,
                      32     ;  implied or otherwise.  You are free to use/modify any of the provided
                      33     ;  code at your own risk in your applications with the expressed limitation
                      34     ;  of liability (see below) so long as your product using the code contains
                      35     ;  at least one uPSD product (device).
                      36     ;
                      37     ;  LIMITATION OF LIABILITY:   NEITHER STMicroelectronics NOR ITS VENDORS OR 
                      38     ;  AGENTS SHALL BE LIABLE FOR ANY LOSS OF PROFITS, LOSS OF USE, LOSS OF DATA,
                      39     ;  INTERRUPTION OF BUSINESS, NOR FOR INDIRECT, SPECIAL, INCIDENTAL OR
                      40     ;  CONSEQUENTIAL DAMAGES OF ANY KIND WHETHER UNDER THIS AGREEMENT OR
                      41     ;  OTHERWISE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                      42     ;------------------------------------------------------------------------------
                      43     
                      44     
                      45     ;  User-defined <h> Power-On Initialization of Memory (Clear Memory)
                      46     ;
                      47     ;  With the following EQU statements the initialization of memory
                      48     ;  at processor reset can be defined:
                      49     
                      50     ;               ; the absolute start-address of IDATA memory is always 0
                      51     ; <o> IDATALEN: IDATA memory size <0x0-0x1FF>
                      52     ;     <i> Note: The absolute start address of IDATA memory is always 0
                      53     ;     <i>       The IDATA space overlaps physically the DATA and BIT areas.
  0100                54     IDATALEN        EQU     100H    ; the length of IDATA memory in bytes.
                      55     
                      56     ; *** NOTE: uPSD users need to fill in the following based on where SRAM memory mapped.
                      57     
A51 MACRO ASSEMBLER  STARTU32                                                             09/12/2024 14:18:44 PAGE     2

                      58     ; <o> XDATASTART: XDATA memory start address <0x0-0xFFFF> 
                      59     ;     <i> The absolute start address of XDATA memory
                      60     ;     <i> *** NOTE: uPSD users need to fill this in based on where SRAM memory mapped.
  0000                61     XDATASTART      EQU     0     
                      62     ;
                      63     ; <o> XDATALEN: XDATA memory size <0x0-0xFFFF> 
                      64     ;     <i> The length of XDATA memory in bytes.
                      65     ;     <i> *** NOTE: uPSD users need to fill this in based on where SRAM memory mapped.
  0000                66     XDATALEN        EQU     0      
                      67     ;
                      68     ; <o> PDATASTART: PDATA memory start address <0x0-0xFFFF> 
                      69     ;     <i> The absolute start address of PDATA memory
                      70     ;     <i> *** NOTE: uPSD users need to fill this in based on where SRAM memory mapped.
  0000                71     PDATASTART      EQU     0H
                      72     ;
                      73     ; <o> PDATALEN: PDATA memory size <0x0-0xFF> 
                      74     ;     <i> The length of PDATA memory in bytes.
                      75     ;     <i> *** NOTE: uPSD users need to fill this in based on where SRAM memory mapped.
  0000                76     PDATALEN        EQU     0H
                      77     ;
                      78     ;</h>
                      79     ;  Notes:  The IDATA space overlaps physically the DATA and BIT areas of the
                      80     ;          8051 CPU. At minimum the memory space occupied from the C51 
                      81     ;          run-time routines must be set to zero.
                      82     
                      83     
                      84     ;------------------------------------------------------------------------------
                      85     ;
                      86     ;<h> Reentrant Stack Initialization
                      87     ;
                      88     ;  The following EQU statements define the stack pointer for reentrant
                      89     ;  functions and initialized it:
                      90     ;
                      91     ; <h> Stack Space for reentrant functions in the SMALL model.
                      92     ;  <q> IBPSTACK: Enable SMALL model reentrant stack
                      93     ;      <i> Stack space for reentrant functions in the SMALL model.
  0000                94     IBPSTACK        EQU     0       ; set to 1 if small reentrant is used.
                      95     ;  <o> IBPSTACKTOP: End address of SMALL model stack <0x0-0xFF>
                      96     ;      <i> Set the top of the stack to the highest location. 
  0100                97     IBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                      98     ; </h>
                      99     ;
                     100     ; <h> Stack Space for reentrant functions in the LARGE model.      
                     101     ;  <q> XBPSTACK: Enable LARGE model reentrant stack
                     102     ;      <i> Stack space for reentrant functions in the LARGE model.
  0000               103     XBPSTACK        EQU     0       ; set to 1 if large reentrant is used.
                     104     ;  <o> XBPSTACKTOP: End address of LARGE model stack <0x0-0xFFFF>
                     105     ;      <i> Set the top of the stack to the highest location. 
  0000               106     XBPSTACKTOP     EQU     0xFFFF +1   ; default 0FFFFH+1 
                     107     ; </h>
                     108     ;
                     109     ; <h> Stack Space for reentrant functions in the COMPACT model.    
                     110     ;  <q> PBPSTACK: Enable COMPACT model reentrant stack
                     111     ;      <i> Stack space for reentrant functions in the COMPACT model.
  0000               112     PBPSTACK        EQU     0       ; set to 1 if compact reentrant is used.
                     113     ;
                     114     ;  <o> PBPSTACKTOP: End address of COMPACT model stack <0x0-0xFFFF>
                     115     ;      <i> Set the top of the stack to the highest location.
  0100               116     PBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                     117     ; </h>
                     118     ;</h>
                     119     ;------------------------------------------------------------------------------
                     120     ;
                     121     ;  Page Definition for Using the Compact Model with 64 KByte xdata RAM
                     122     ;
                     123     ;  The following EQU statements define the xdata page used for pdata
A51 MACRO ASSEMBLER  STARTU32                                                             09/12/2024 14:18:44 PAGE     3

                     124     ;  variables. The EQU PPAGE must conform with the PPAGE control used
                     125     ;  in the linker invocation.
                     126     ;
                     127     ;<e> PPAGEENABLE: Compact Model Page Definition
                     128     ;    <i>Define the XDATA page used for PDATA variables. 
                     129     ;    <i>PPAGE must conform with the PPAGE set in the linker invocation.
                     130     ;
                     131     ; Enable pdata memory page initalization
  0000               132     PPAGEENABLE     EQU     0       ; set to 1 if pdata object are used.
                     133     ;
                     134     ; <o> PPAGE: PDATA Page number <0x0-0xFF> 
                     135     ;     <i> Uppermost 256-byte address of the page used for pdata variables.
  0000               136     PPAGE           EQU     0       ; define PPAGE number.
                     137     ;
                     138     ; <o> PPAGE_SFR: SFR address containing PPAGE value <0x0-0xFF> 
                     139     ;     <i> NOTE: Most 8051 variants use P2 as uppermost address byte.
  00A0               140     PPAGE_SFR       DATA    0A0H
                     141     ;
                     142     ;</e>
                     143     ;------------------------------------------------------------------------------
                     144     
                     145     ; Standard SFR Symbols 
  00E0               146     ACC     DATA    0E0H
  00F0               147     B       DATA    0F0H
  0081               148     SP      DATA    81H
  0082               149     DPL     DATA    82H
  0083               150     DPH     DATA    83H
  00AE               151     WDKEY   DATA    0AEH
  0095               152     ASCL    DATA    095H
  00B1               153     PSCL0L  DATA    0B1H
  00B2               154     PSCL0H  DATA    0B2H
  00B3               155     PSCL1L  DATA    0B3H
  00B4               156     PSCL1H  DATA    0B4H
  00E1               157     USCL    DATA    0E1H
  00D7               158     DDCCON  DATA    0D7H
  00D8               159     S1CON   DATA    0D8H
                     160     
                     161                     NAME    ?C_STARTUP
                     162     
                     163     
                     164     ?C_C51STARTUP   SEGMENT   CODE
                     165     ?STACK          SEGMENT   IDATA
                     166     
----                 167                     RSEG    ?STACK
0000                 168                     DS      1
                     169     
                     170                     EXTRN CODE (?C_START)
                     171                     PUBLIC  ?C_STARTUP
                     172     
----                 173                     CSEG    AT      0
0000 020000   F      174     ?C_STARTUP:     LJMP    STARTUP1
                     175     
----                 176                     RSEG    ?C_C51STARTUP
                     177     
0000                 178     STARTUP1:
                     179     
                     180     ; uPSD specific initialization
                     181     
0000 74FE            182                     MOV     A, #0FEH          ; Load pre-scalars with large value
0002 F595            183                     MOV     ASCL, A           ; Slow down ADC Logic
0004 F5B1            184                     MOV     PSCL0L, A         ; Slow down PWM Logic
0006 F5B2            185                     MOV     PSCL0H, A
0008 F5B3            186                     MOV     PSCL1L, A
000A F5B4            187                     MOV     PSCL1H, A
000C F5E1            188                     MOV     USCL, A           ; Slow down USB Logic
                     189     
A51 MACRO ASSEMBLER  STARTU32                                                             09/12/2024 14:18:44 PAGE     4

000E 7455            190                     MOV     A, #055H          ; Disable Watch Dog Reset
0010 F5AE            191                     MOV     WDKEY, A
                     192     
                     193     IF IDATALEN <> 0
0012 78FF            194                     MOV     R0,#IDATALEN - 1
0014 E4              195                     CLR     A
0015 F6              196     IDATALOOP:      MOV     @R0,A
0016 D8FD            197                     DJNZ    R0,IDATALOOP
                     198     ENDIF
                     199     
                     200     IF XDATALEN <> 0
                                             MOV     DPTR,#XDATASTART
                                             MOV     R7,#LOW (XDATALEN)
                               IF (LOW (XDATALEN)) <> 0
                                             MOV     R6,#(HIGH (XDATALEN)) +1
                               ELSE
                                             MOV     R6,#HIGH (XDATALEN)
                               ENDIF
                                             CLR     A
                             XDATALOOP:      MOVX    @DPTR,A
                                             INC     DPTR
                                             DJNZ    R7,XDATALOOP
                                             DJNZ    R6,XDATALOOP
                             ENDIF
                     214     
                     215     IF PPAGEENABLE <> 0
                                             MOV     PPAGE_SFR,#PPAGE
                             ENDIF
                     218     
                     219     IF PDATALEN <> 0
                                             MOV     R0,#LOW (PDATASTART)
                                             MOV     R7,#LOW (PDATALEN)
                                             CLR     A
                             PDATALOOP:      MOVX    @R0,A
                                             INC     R0
                                             DJNZ    R7,PDATALOOP
                             ENDIF
                     227     
                     228     IF IBPSTACK <> 0
                             EXTRN DATA (?C_IBP)
                             
                                             MOV     ?C_IBP,#LOW IBPSTACKTOP
                             ENDIF
                     233     
                     234     IF XBPSTACK <> 0
                             EXTRN DATA (?C_XBP)
                             
                                             MOV     ?C_XBP,#HIGH XBPSTACKTOP
                                             MOV     ?C_XBP+1,#LOW XBPSTACKTOP
                             ENDIF
                     240     
                     241     IF PBPSTACK <> 0
                             EXTRN DATA (?C_PBP)
                                             MOV     ?C_PBP,#LOW PBPSTACKTOP
                             ENDIF
                     245     
0018 758100   F      246                     MOV     SP,#?STACK-1
                     247     ; This code is required if you use L51_BANK.A51 with Banking Mode 4
                     248     ;<h> Code Banking
                     249     ; <q> Select Bank 0 for L51_BANK.A51 Mode 4
                     250     
                             
                             
                                             
                             
                     255     ;</h>
A51 MACRO ASSEMBLER  STARTU32                                                             09/12/2024 14:18:44 PAGE     5

001B 020000   F      256                     LJMP    ?C_START
                     257     
                     258                     END
A51 MACRO ASSEMBLER  STARTU32                                                             09/12/2024 14:18:44 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

?C_C51STARTUP. . .  C SEG    001EH       REL=UNIT
?C_START . . . . .  C ADDR   -----       EXT
?C_STARTUP . . . .  C ADDR   0000H   A   
?STACK . . . . . .  I SEG    0001H       REL=UNIT
ACC. . . . . . . .  D ADDR   00E0H   A   
ASCL . . . . . . .  D ADDR   0095H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
DDCCON . . . . . .  D ADDR   00D7H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
IBPSTACK . . . . .  N NUMB   0000H   A   
IBPSTACKTOP. . . .  N NUMB   0100H   A   
IDATALEN . . . . .  N NUMB   0100H   A   
IDATALOOP. . . . .  C ADDR   0015H   R   SEG=?C_C51STARTUP
PBPSTACK . . . . .  N NUMB   0000H   A   
PBPSTACKTOP. . . .  N NUMB   0100H   A   
PDATALEN . . . . .  N NUMB   0000H   A   
PDATASTART . . . .  N NUMB   0000H   A   
PPAGE. . . . . . .  N NUMB   0000H   A   
PPAGEENABLE. . . .  N NUMB   0000H   A   
PPAGE_SFR. . . . .  D ADDR   00A0H   A   
PSCL0H . . . . . .  D ADDR   00B2H   A   
PSCL0L . . . . . .  D ADDR   00B1H   A   
PSCL1H . . . . . .  D ADDR   00B4H   A   
PSCL1L . . . . . .  D ADDR   00B3H   A   
S1CON. . . . . . .  D ADDR   00D8H   A   
SP . . . . . . . .  D ADDR   0081H   A   
STARTUP1 . . . . .  C ADDR   0000H   R   SEG=?C_C51STARTUP
USCL . . . . . . .  D ADDR   00E1H   A   
WDKEY. . . . . . .  D ADDR   00AEH   A   
XBPSTACK . . . . .  N NUMB   0000H   A   
XBPSTACKTOP. . . .  N NUMB   0000H   A   
XDATALEN . . . . .  N NUMB   0000H   A   
XDATASTART . . . .  N NUMB   0000H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
